{"version":3,"file":"src_app_provider_StoreProvider_index_tsx-src_entities_Profile_index_ts.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AACA;AAIA;AAEA;AAAA;AAAA;AAGA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAGA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAAA;AACA;AAGA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AAGA;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACJA;AAGA;;;;;;;;;;;;;;;ACCA;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA","sources":["webpack://prodproj/./src/app/provider/StoreProvider/config/ReducersManager.ts","webpack://prodproj/./src/app/provider/StoreProvider/config/store.ts","webpack://prodproj/./src/app/provider/StoreProvider/index.tsx","webpack://prodproj/./src/app/provider/StoreProvider/ui/StoreProvider.tsx","webpack://prodproj/./src/entities/Counter/index.ts","webpack://prodproj/./src/entities/Counter/model/selectors/getCounterValue/getCounterValue.tsx","webpack://prodproj/./src/entities/Counter/model/selectors/getCounter/getCounter.tsx","webpack://prodproj/./src/entities/Counter/model/slice/CounterSlice.tsx","webpack://prodproj/./src/entities/Counter/ui/Counter.tsx","webpack://prodproj/./src/entities/Profile/index.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileData/getProfileData.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileError/getProfileError.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileForm/getProfileForm.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileIsLoading/getProfileIsLoading.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileReadonly/getProfileReadonly.tsx","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileValidationErrors/getProfileValidationErrors.ts","webpack://prodproj/./src/entities/Profile/model/services/fetchProfileData/fetchProfileData.ts","webpack://prodproj/./src/entities/Profile/model/services/setProfileData/setProfileData.ts","webpack://prodproj/./src/entities/Profile/model/services/validateProfileData/validateProfileData.tsx","webpack://prodproj/./src/entities/Profile/model/slice/ProfileSlice.tsx","webpack://prodproj/./src/entities/Profile/model/types/profile.ts","webpack://prodproj/./src/entities/User/index.ts","webpack://prodproj/./src/entities/User/modal/selectors/getUserAuthData/getUserAuthData.ts","webpack://prodproj/./src/entities/User/modal/slice/UserSlice.tsx","webpack://prodproj/./src/shared/api/api.ts","webpack://prodproj/./src/shared/const/localstorage.ts"],"sourcesContent":["import { ReducerWithoutAction } from \"react\"\r\nimport { AnyAction, Reducer, ReducersMapObject, combineReducers } from \"redux\"\r\nimport { StateSchema } from \"..\"\r\nimport { ReducerManager, StateSchemaKey } from \"./StateSchema\"\r\n\r\nexport function createReducerManager(initialReducers:ReducersMapObject<StateSchema>):ReducerManager {\r\n    \r\n    const reducers = { ...initialReducers }\r\n  \r\n    \r\n    let combinedReducer = combineReducers(reducers)\r\n  \r\n    \r\n    let keysToRemove:StateSchemaKey[] = []\r\n  \r\n    return {\r\n        getReducerMap: () => reducers,\r\n  \r\n        reduce: (state:StateSchema, action:AnyAction) => {\r\n            if (keysToRemove.length > 0) {\r\n                state = { ...state }\r\n                for (let key of keysToRemove) {\r\n                    delete state[key]\r\n                }\r\n                keysToRemove = []\r\n            }\r\n  \r\n            return combinedReducer(state, action)\r\n        },\r\n  \r\n        add: (key:StateSchemaKey, reducer:Reducer) => {\r\n            if (!key || reducers[key]) {\r\n                return\r\n            }\r\n  \r\n            reducers[key] = reducer\r\n  \r\n            combinedReducer = combineReducers(reducers)\r\n        },\r\n  \r\n        remove: (key:StateSchemaKey) => {\r\n            if (!key || !reducers[key]) {\r\n                return\r\n            }\r\n  \r\n            delete reducers[key]\r\n  \r\n            keysToRemove.push(key)\r\n  \r\n            combinedReducer = combineReducers(reducers)\r\n        }\r\n    }\r\n}\r\n","import { CombinedState, Reducer, ReducersMapObject, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { ExtraThunk, StateSchema } from \"./StateSchema\";\r\nimport { CounterReducers } from \"entities/Counter\";\r\nimport { UserReducer } from \"entities/User\";\r\nimport { createReducerManager } from \"./ReducersManager\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { $ax } from \"shared/api/api\";\r\nimport { To, NavigateOptions } from \"react-router-dom\";\r\n\r\n\r\nexport function createReduxStore(\r\n    initialState?: StateSchema,\r\n    asyncReducers?: ReducersMapObject<StateSchema>,\r\n    navigate?: (to: To, options?: NavigateOptions)=> void,\r\n) {\r\n    const rootReducers: ReducersMapObject<StateSchema> = {\r\n        ...asyncReducers,\r\n        counter: CounterReducers,\r\n        user: UserReducer,\r\n    };\r\n\r\n    const extraArg: ExtraThunk = {\r\n        api: $ax,\r\n        navigate,\r\n    };\r\n\r\n    const reducerManager = createReducerManager(rootReducers);\r\n\r\n    const store = configureStore({\r\n        reducer: reducerManager.reduce as Reducer<CombinedState<StateSchema>>,\r\n        preloadedState: initialState,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n            thunk:{\r\n                extraArgument: extraArg\r\n            }\r\n        })\r\n    });\r\n\r\n    // @ts-ignore\r\n    store.reducerManager = reducerManager;\r\n\r\n    return store;\r\n}\r\nexport type AppDispatch = ReturnType<typeof createReduxStore>['dispatch']\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { createReduxStore } from \"./config/store\";\r\nimport {StoreProvider} from \"./ui/StoreProvider\";\r\nimport { StateSchema } from \"./config/StateSchema\";\r\nimport  {AppDispatch, useAppDispatch}  from \"./config/store\";\r\nimport { ReduxStoreWithManager } from \"./config/StateSchema\";\r\nimport { ExtraThunk } from \"./config/StateSchema\";\r\nexport {StoreProvider, createReduxStore, StateSchema, AppDispatch, useAppDispatch, ReduxStoreWithManager,ExtraThunk}","import React, { ReactNode } from 'react';\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport { createReduxStore } from '../config/store';\r\nimport { StateSchema } from '../config/StateSchema';\r\nimport { ReducersMapObject } from 'redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface StoreProviderProps {\r\n    children?: ReactNode;\r\n    initialState?: DeepPartial<StateSchema>;\r\n    asyncReducers?: DeepPartial<ReducersMapObject<StateSchema>>\r\n}\r\n\r\nexport const StoreProvider = (props: StoreProviderProps) => {\r\n    const {\r\n        children,\r\n        initialState,\r\n        asyncReducers,\r\n    } = props;\r\n\r\n    const navigate = useNavigate();\r\n    const store = createReduxStore(\r\n        initialState as StateSchema,\r\n        asyncReducers as ReducersMapObject<StateSchema>,\r\n        navigate\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\n","import { CounterReducers } from \"./model/slice/CounterSlice\";\r\nimport Counter from \"./ui/Counter\";\r\nimport type { CounterSchema } from \"./model/types/CounterSchema\";\r\n\r\nexport {CounterReducers,Counter,CounterSchema}","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { getCounter } from \"../getCounter/getCounter\";\r\nimport { CounterSchema } from \"../../types/CounterSchema\";\r\n\r\nexport const getCounterValue = createSelector(\r\n    getCounter,\r\n    ( counter:CounterSchema)=>\r\n        counter.value\r\n)","import { StateSchema } from \"app/provider/StoreProvider\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const getCounter = (state:StateSchema) => state.counter","import { createSlice } from '@reduxjs/toolkit'\r\nimport { CounterSchema } from '../types/CounterSchema'\r\n\r\nconst initialState: CounterSchema = {\r\n    value:0\r\n}\r\nexport const CounterSlice = createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment: state =>{\r\n            state.value+=1\r\n        },\r\n        decrement:state =>{\r\n            state.value-=1\r\n        }\r\n    }\r\n})\r\nexport const {actions:CounterActions} = CounterSlice\r\nexport const {reducer:CounterReducers} = CounterSlice","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { classNames } from 'shared/lib/classNames/classNames';\r\nimport { Button } from 'shared/ui/Button/Button';\r\nimport { CounterActions } from '../model/slice/CounterSlice';\r\nimport { StateSchema } from 'app/provider/StoreProvider/config/StateSchema';\r\nimport { getCounterValue } from '../model/selectors/getCounterValue/getCounterValue';\r\n\r\ninterface CounerProps{\r\n    className?: string\r\n}\r\n\r\nconst Counter = ({className}:CounerProps) => {\r\n    const dispatch = useDispatch()\r\n    const counterValue = useSelector(getCounterValue)\r\n    const increment = () =>{\r\n        dispatch(CounterActions.increment())\r\n    }\r\n    const decrement = () =>{\r\n        dispatch(CounterActions.decrement())\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 data-testid = \"value-title\">value = {counterValue}</h1>\r\n            <Button data-testid = \"increment-btn\" onClick={increment}>increment</Button>\r\n            <Button data-testid = \"decrement-btn\" onClick={decrement}>decrement</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import { ProfileActions, ProfileReducer } from \"./model/slice/ProfileSlice\";\r\nimport { ProfileType, ProfileSchema } from \"./model/types/profile\";\r\nimport { FetchProfileData } from \"./model/services/fetchProfileData/fetchProfileData\";\r\nimport { getProfileData } from \"./model/selectors/getProfileData/getProfileData\";\r\nimport { getProfileError } from \"./model/selectors/getProfileError/getProfileError\";\r\nimport { getProfileIsLoading } from \"./model/selectors/getProfileIsLoading/getProfileIsLoading\";\r\nimport { getProfileReadonly } from \"./model/selectors/getProfileReadonly/getProfileReadonly\";\r\nimport { getProfileForm } from \"./model/selectors/getProfileForm/getProfileForm\";\r\nimport { setProfileData } from \"./model/services/setProfileData/setProfileData\";\r\nimport { getProfileValidationErrors } from \"./model/selectors/getProfileValidationErrors/getProfileValidationErrors\";\r\nimport ProfileCard from \"./ui/ProfileCard/ProfileCard\";\r\n\r\nexport { ProfileType, ProfileSchema, ProfileReducer, ProfileActions, FetchProfileData, getProfileData,\r\n    getProfileError, getProfileIsLoading, getProfileReadonly, getProfileForm, getProfileValidationErrors, ProfileCard, setProfileData}","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileData = (state: StateSchema) => state?.profile?.data","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileError = (state: StateSchema) => state?.profile?.error","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileForm = (state: StateSchema) => state?.profile?.form","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileIsLoading = (state: StateSchema) => state?.profile?.isLoading","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileReadonly = (state: StateSchema) => state?.profile?.readonly || false","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileValidationErrors = (state: StateSchema) => state?.profile?.validateError || []","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { ExtraThunk } from 'app/provider/StoreProvider'\r\nimport { ProfileType } from '../../types/profile'\r\n\r\nexport const FetchProfileData = createAsyncThunk<ProfileType,void,{ rejectValue: string , extra:ExtraThunk}>(\r\n    'profile/FetchProfileData',\r\n    async (_,thunkAPI) => {\r\n        try {\r\n            const response = await thunkAPI.extra.api.get<ProfileType>('/profile')\r\n            return response.data\r\n        } catch (err) {\r\n            return thunkAPI.rejectWithValue(\"Неправильный юзернейм или пароль\")\r\n        }\r\n    }\r\n)\r\n\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { ProfileType, ProfileValidationErrors } from '../../types/profile'\r\nimport { getProfileForm } from '../../selectors/getProfileForm/getProfileForm'\r\nimport { ThunkConfig } from 'app/provider/StoreProvider/config/StateSchema'\r\nimport { validateProfileData } from '../validateProfileData/validateProfileData'\r\n\r\nexport const setProfileData = createAsyncThunk<ProfileType,void,ThunkConfig<ProfileValidationErrors[]>>(\r\n    'profile/setProfileData',\r\n    async (_,thunkAPI, ) => {\r\n        const {extra, rejectWithValue,dispatch, getState} = thunkAPI\r\n        const formData = getProfileForm(getState())\r\n        const errors = validateProfileData(formData)\r\n\r\n        if (errors.length){\r\n            return rejectWithValue(errors)\r\n        }\r\n        try {\r\n            const response = await extra.api.put<ProfileType>('/profile', formData)\r\n            if (!response){\r\n                throw new Error();\r\n            }\r\n            return response.data\r\n        } catch (err) {\r\n            return rejectWithValue([ProfileValidationErrors.SERV_ERR])\r\n        }\r\n    }\r\n)\r\n\r\n","import { ProfileType, ProfileValidationErrors } from \"../../types/profile\";\r\n\r\nexport const validateProfileData = (profile?: ProfileType) =>{\r\n    if (!profile){\r\n        return [ProfileValidationErrors.NO_DATA]\r\n    }\r\n    const {age, first, lastname, country} = profile\r\n    const error: ProfileValidationErrors[] = []\r\n    if (!age || !Number.isInteger(age)){\r\n       \r\n        error.push(ProfileValidationErrors.INCORRECT_AGE)\r\n    }\r\n    if (!lastname || !first){\r\n        error.push(ProfileValidationErrors.INCORRECT_FIRST_NAME_OR_LAST_NAME)\r\n    }\r\n    if (!country){\r\n        error.push(ProfileValidationErrors.INCORRECT_COUNTRY)\r\n    }\r\n    return error\r\n}\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { ProfileSchema, ProfileType } from '../types/profile'\r\nimport { FetchProfileData } from '../services/fetchProfileData/fetchProfileData'\r\nimport { User } from 'entities/User'\r\nimport { setProfileData } from '../services/setProfileData/setProfileData'\r\n\r\nconst initialState: ProfileSchema = {\r\n    readonly:true,\r\n    isLoading:false,\r\n    error:undefined,\r\n    data:undefined\r\n}\r\nexport const ProfileSlice = createSlice({\r\n    name:'Profile',\r\n    initialState,\r\n    reducers:{\r\n        setReadonly: (state,action:PayloadAction<boolean>)=>{\r\n            state.readonly=action.payload\r\n        },\r\n        setNotReadonly: (state)=>{\r\n            state.readonly=true\r\n            state.form = state.data\r\n            state.validateError = undefined\r\n        },\r\n        updateProfile: (state,action:PayloadAction<ProfileType>)=>{\r\n            state.form = {\r\n                ...state.form, \r\n                ...action.payload\r\n            }\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(FetchProfileData.pending, (state) => {\r\n                state.error = undefined;\r\n                state.isLoading = true\r\n            })\r\n            .addCase(FetchProfileData.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.data = action.payload\r\n                state.form = action.payload\r\n            })\r\n            .addCase(FetchProfileData.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = action.payload\r\n            })\r\n            .addCase(setProfileData.pending, (state) => {\r\n                state.validateError = undefined;\r\n                state.isLoading = true\r\n            })\r\n            .addCase(setProfileData.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.data = action.payload\r\n                state.form = action.payload\r\n                state.validateError = undefined\r\n            })\r\n            .addCase(setProfileData.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.validateError = action.payload\r\n            })\r\n    },\r\n})\r\nexport const {actions:ProfileActions} = ProfileSlice\r\nexport const {reducer:ProfileReducer} = ProfileSlice","import { Country } from \"entities/Country/model/types/Country\";\r\nimport { Currency } from \"entities/Currency/model/types/Currency\";\r\n\r\n\r\nexport enum ProfileValidationErrors {\r\n    INCORRECT_FIRST_NAME_OR_LAST_NAME = \"INCORRECT_FIRST_NAME_OR_LAST_NAME\",\r\n    INCORRECT_AGE = \"INCORRECT_AGE\",\r\n    INCORRECT_COUNTRY = \"INCORRECT_COUNTRY\",\r\n    NO_DATA = \"NO_DATA\",\r\n    SERV_ERR = \"SERV_ERR\"\r\n}\r\n\r\nexport interface ProfileType{\r\n    first?: string,\r\n    lastname?: string,\r\n    age?: number,\r\n    currency?: Currency,\r\n    country?: Country,\r\n    city?: string,\r\n    username?: string,\r\n    avatar?: string\r\n}\r\n\r\nexport interface ProfileSchema{\r\n    data?:ProfileType,\r\n    form?:ProfileType,\r\n    isLoading: boolean,\r\n    error?:string,\r\n    readonly:boolean,\r\n    validateError?:ProfileValidationErrors[]\r\n}","import { UserActions, UserReducer } from \"./modal/slice/UserSlice\";\r\nimport type { User } from \"./modal/types/User\";\r\nimport type { UserSchema } from \"./modal/types/User\";\r\nimport { getUserAuthData } from \"./modal/selectors/getUserAuthData/getUserAuthData\";\r\nexport {UserActions, UserReducer, User,UserSchema,getUserAuthData }","import { StateSchema } from \"app/provider/StoreProvider\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const getUserAuthData = (state:StateSchema) => state?.user.authData","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { User, UserSchema } from '../types/User'\r\nimport { USER_LOCALSTORAGE_KEY } from 'shared/const/localstorage'\r\nimport { userInfo } from 'os'\r\n\r\nconst initialState: UserSchema = {\r\n   \r\n}\r\nexport const UserSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n        setAuthData: (state,action:PayloadAction<User>)=>{\r\n            state.authData=action.payload\r\n        },\r\n        initAuthData:(state)=>{\r\n            const user = localStorage.getItem(USER_LOCALSTORAGE_KEY)\r\n            if (user){\r\n                state.authData = JSON.parse(user)\r\n            }\r\n        },\r\n        logout:(state)=>{\r\n            state.authData = undefined\r\n            localStorage.removeItem(USER_LOCALSTORAGE_KEY)\r\n        }\r\n\r\n    }\r\n})\r\nexport const {actions:UserActions} = UserSlice\r\nexport const {reducer:UserReducer} = UserSlice","import axios from \"axios\";\r\nimport { USER_LOCALSTORAGE_KEY } from \"shared/const/localstorage\";\r\n\r\nexport const $ax = axios.create({\r\n    baseURL:\"http://localhost:8000\",\r\n    headers:{\r\n        Authorization:localStorage.getItem(USER_LOCALSTORAGE_KEY)\r\n    }\r\n})","export const USER_LOCALSTORAGE_KEY = 'user'"],"names":[],"sourceRoot":""}