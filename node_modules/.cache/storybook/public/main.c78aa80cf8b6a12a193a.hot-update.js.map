{"version":3,"file":"main.c78aa80cf8b6a12a193a.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA","sources":["webpack://prodproj/./src/app/provider/themeProvider/index.tsx","webpack://prodproj/./src/app/provider/themeProvider/lib/UseTheme.ts"],"sourcesContent":["import ThemeProvider from \"./ui/ThemeProvider\";\r\nimport { UseTheme } from \"./lib/UseTheme\";\r\nimport { Theme } from \"./lib/ThemeContext\";\r\n\r\nexport {ThemeProvider, UseTheme, Theme}","import { LOCAL_STORAGE_THEME_KEY, Theme, ThemeContext } from 'app/provider/themeProvider/lib/ThemeContext';\r\nimport React, { Suspense, useContext, useState } from 'react';\r\n\r\ninterface UseThemeResult{\r\n    theme: Theme;\r\n    ToggleTheme: () =>  void;\r\n}\r\n\r\n\r\nexport function UseTheme():UseThemeResult{\r\n    const {theme, setTheme} = useContext(ThemeContext)\r\n    const ToggleTheme = () =>{\r\n        const newTheme = theme === Theme.LIGHT ? Theme.DARK : Theme.LIGHT\r\n        setTheme?.(newTheme)\r\n        localStorage.setItem(LOCAL_STORAGE_THEME_KEY, newTheme)\r\n    }\r\n\r\n    return { theme: theme || Theme.LIGHT, ToggleTheme}\r\n}"],"names":[],"sourceRoot":""}