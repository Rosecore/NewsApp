{"version":3,"file":"src_app_provider_StoreProvider_index_tsx-src_entities_Profile_index_ts.1f7b5de7300f2b25bf87.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAGA","sources":["webpack://prodproj/./src/app/provider/StoreProvider/config/store.ts"],"sourcesContent":["import { CombinedState, Reducer, ReducersMapObject, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { ExtraThunk, StateSchema } from \"./StateSchema\";\r\nimport { CounterReducers } from \"entities/Counter\";\r\nimport { UserReducer } from \"entities/User\";\r\nimport { createReducerManager } from \"./ReducersManager\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { $ax } from \"shared/api/api\";\r\nimport { To, NavigateOptions } from \"react-router-dom\";\r\n\r\n\r\nexport function createReduxStore(\r\n    initialState?: StateSchema,\r\n    asyncReducers?: ReducersMapObject<StateSchema>,\r\n    navigate?: (to: To, options?: NavigateOptions)=> void,\r\n) {\r\n    const rootReducers: ReducersMapObject<StateSchema> = {\r\n        ...asyncReducers,\r\n        counter: CounterReducers,\r\n        user: UserReducer,\r\n    };\r\n\r\n    const extraArg: ExtraThunk = {\r\n        api: $ax,\r\n        navigate,\r\n    };\r\n\r\n    const reducerManager = createReducerManager(rootReducers);\r\n\r\n    const store = configureStore({\r\n        reducer: reducerManager.reduce as Reducer<CombinedState<StateSchema>>,\r\n        preloadedState: initialState,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n            thunk:{\r\n                extraArgument: extraArg\r\n            }\r\n        })\r\n    });\r\n\r\n    // @ts-ignore\r\n    store.reducerManager = reducerManager;\r\n\r\n    return store;\r\n}\r\nexport type AppDispatch = ReturnType<typeof createReduxStore>['dispatch']\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n"],"names":[],"sourceRoot":""}