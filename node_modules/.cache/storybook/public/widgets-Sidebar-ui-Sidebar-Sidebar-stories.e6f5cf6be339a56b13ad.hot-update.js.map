{"version":3,"file":"widgets-Sidebar-ui-Sidebar-Sidebar-stories.e6f5cf6be339a56b13ad.hot-update.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAdA;AAgBA;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAAA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AA1BA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;;;;;;;;;;;;;;;;;ACDA;AACA;AAGA;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAEA;AAPA;AASA;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrCA","sources":["webpack://prodproj/./src/app/provider/ErrorBoundary/index.tsx","webpack://prodproj/./src/app/provider/ErrorBoundary/ui/BugButton.tsx","webpack://prodproj/./src/app/provider/ErrorBoundary/ui/ErrorBoundary.tsx","webpack://prodproj/./src/entities/Counter/index.ts","webpack://prodproj/./src/entities/Counter/model/selectors/getCounterValue/getCounterValue.tsx","webpack://prodproj/./src/entities/Counter/model/selectors/getCounter/getCounter.tsx","webpack://prodproj/./src/entities/Counter/model/slice/CounterSlice.tsx","webpack://prodproj/./src/entities/Counter/ui/Counter.tsx","webpack://prodproj/./src/pages/mainPage/ui/mainPage.async.tsx","webpack://prodproj/./src/pages/profilePage/ui/ProfilePage.tsx","webpack://prodproj/./src/shared/config/routeconfig/routeconfig.tsx","webpack://prodproj/./src/widgets/PageError/index.tsx"],"sourcesContent":["import ErrorBoundary from \"./ui/ErrorBoundary\";\r\nimport BugButton from \"./ui/BugButton\";\r\nexport {ErrorBoundary , BugButton}","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'shared/ui/Button/Button';\r\n\r\nconst BugButton = () => {\r\n    const [error, setError] = useState(false)\r\n\r\n    const throwErr = () =>{\r\n        setError(true)\r\n    }\r\n    useEffect(()=>{\r\n        if (error){\r\n            throw new Error()\r\n        }\r\n    },[error])\r\n    return (\r\n        <Button className='bug-button' onClick={throwErr}>throw error</Button>\r\n    );\r\n};\r\n\r\nexport default BugButton;","import React, { ErrorInfo, ReactNode, Suspense } from \"react\";\r\nimport { PageError } from \"widgets/PageError\";\r\ninterface ErrorBoundaryProps{\r\n    children:ReactNode\r\n}\r\ninterface ErrorBoundaryState{\r\n    hasError: boolean\r\n}\r\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps,ErrorBoundaryState> {\r\n    constructor(props:ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error:Error) {\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error:Error, errorInfo: ErrorInfo) {\r\n        // You can also log the error to an error reporting service\r\n        console.log(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n        const {hasError} = this.state\r\n        const {children} = this.props\r\n        if (hasError) {\r\n        // You can render any custom fallback UI\r\n            return (<Suspense fallback=\"\"><PageError/></Suspense>)\r\n        }\r\n  \r\n        return children; \r\n    }\r\n}\r\nexport default ErrorBoundary","import { CounterReducers } from \"./model/slice/CounterSlice\";\r\nimport Counter from \"./ui/Counter\";\r\nimport type { CounterSchema } from \"./model/types/CounterSchema\";\r\n\r\nexport {CounterReducers,Counter,CounterSchema}","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { getCounter } from \"../getCounter/getCounter\";\r\nimport { CounterSchema } from \"../../types/CounterSchema\";\r\n\r\nexport const getCounterValue = createSelector(\r\n    getCounter,\r\n    ( counter:CounterSchema)=>\r\n        counter.value\r\n)","import { StateSchema } from \"app/provider/StoreProvider\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const getCounter = (state:StateSchema) => state.counter","import { createSlice } from '@reduxjs/toolkit'\r\nimport { CounterSchema } from '../types/CounterSchema'\r\n\r\nconst initialState: CounterSchema = {\r\n    value:0\r\n}\r\nexport const CounterSlice = createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment: state =>{\r\n            state.value+=1\r\n        },\r\n        decrement:state =>{\r\n            state.value-=1\r\n        }\r\n    }\r\n})\r\nexport const {actions:CounterActions} = CounterSlice\r\nexport const {reducer:CounterReducers} = CounterSlice","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { classNames } from 'shared/lib/classNames/classNames';\r\nimport { Button } from 'shared/ui/Button/Button';\r\nimport { CounterActions } from '../model/slice/CounterSlice';\r\nimport { StateSchema } from 'app/provider/StoreProvider/config/StateSchema';\r\nimport { getCounterValue } from '../model/selectors/getCounterValue/getCounterValue';\r\n\r\ninterface CounerProps{\r\n    className?: string\r\n}\r\n\r\nconst Counter = ({className}:CounerProps) => {\r\n    const dispatch = useDispatch()\r\n    const counterValue = useSelector(getCounterValue)\r\n    const increment = () =>{\r\n        dispatch(CounterActions.increment())\r\n    }\r\n    const decrement = () =>{\r\n        dispatch(CounterActions.decrement())\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 data-testid = \"value-title\">value = {counterValue}</h1>\r\n            <Button data-testid = \"increment-btn\" onClick={increment}>increment</Button>\r\n            <Button data-testid = \"decrement-btn\" onClick={decrement}>decrement</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;","import React from \"react\"\r\n\r\nconst MainPageAsync = React.lazy(()=>import(\"./mainPage\"))\r\n\r\nexport default MainPageAsync","import { BugButton } from \"app/provider/ErrorBoundary\";\r\nimport { Counter } from \"entities/Counter\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ProfilePage = () =>{\r\n    const {t} = useTranslation()\r\n    return (<div>\r\n        <BugButton/>\r\n        <Counter />\r\n        {t('ProfilePage')}\r\n    </div>)\r\n}\r\n\r\nexport default ProfilePage","import { AboutPage } from \"pages/aboutPage\"\r\nimport { MainPage } from \"pages/mainPage\"\r\nimport { NotFoundPage } from \"pages/notFoundPage\"\r\nimport ProfilePage from \"pages/profilePage/ui/ProfilePage\"\r\nimport { RouteProps } from \"react-router-dom\"\r\n\r\nexport enum AppRoutes {\r\n    main= \"main\",\r\n    about= \"about\",\r\n    profile = \"profile\",\r\n    NOT_FOUND = \"not_found\"\r\n}\r\n\r\nexport const RoutePath: Record<AppRoutes, string> = {\r\n    [AppRoutes.main] :'/',\r\n    [AppRoutes.about ] :'/about',\r\n    [AppRoutes.profile]:'/profile',\r\n    [AppRoutes.NOT_FOUND ] :'*'\r\n}\r\n\r\nexport const routeConfig: Record<AppRoutes, RouteProps>= {\r\n    [AppRoutes.main ] :{\r\n        path: RoutePath.main,\r\n        element : <MainPage/>\r\n    },\r\n    [AppRoutes.about ] :{\r\n        path: RoutePath.about,\r\n        element : <AboutPage/>\r\n    },\r\n    [AppRoutes.profile ] :{\r\n        path: RoutePath.profile,\r\n        element : <ProfilePage/>\r\n    },\r\n    [AppRoutes.NOT_FOUND ] :{\r\n        path: RoutePath.not_found,\r\n        element : <NotFoundPage/>\r\n    }\r\n}","import { PageError } from \"./ui/PageError\";\r\n\r\nexport {PageError}"],"names":[],"sourceRoot":""}