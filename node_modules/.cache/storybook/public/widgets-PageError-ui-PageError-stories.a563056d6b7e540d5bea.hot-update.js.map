{"version":3,"file":"widgets-PageError-ui-PageError-stories.a563056d6b7e540d5bea.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAGA","sources":["webpack://prodproj/./src/shared/ui/Button/Button.tsx"],"sourcesContent":["import { Link, LinkProps } from 'react-router-dom';\r\nimport { classNames } from 'shared/lib/classNames/classNames';\r\nimport cls from './Button.module.scss'\r\nimport { ButtonHTMLAttributes, FC } from 'react';\r\n\r\nexport enum ThemeButton{\r\n    CLEAR= 'clear',\r\n    OUTLINE = 'outline',\r\n    BACKGROUND= 'background',\r\n    BACKGROUNDINVERTED = 'background-inverted',\r\n    CLEARINVERTED =\"clearInverted\"\r\n}\r\n\r\nexport enum ButtonSize{\r\n    M='size_m',\r\n    L='size_l',\r\n    XL='size_xl'\r\n}\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>{\r\n    className?: string,\r\n    theme?:ThemeButton,\r\n    square?:boolean,\r\n    size?:ButtonSize,\r\n    disabled?:boolean\r\n}\r\n\r\nexport const Button = memo((props: ButtonProps) => {\r\n    const {\r\n        className,\r\n        children,\r\n        theme,\r\n        square,\r\n        disabled,\r\n        size = ButtonSize.M,\r\n        ...otherProps\r\n    } = props;\r\n\r\n    const mods: Record<string, boolean> = {\r\n        [cls[theme]]: true,\r\n        [cls.square]: square,\r\n        [cls[size]]: true,\r\n        [cls.disabled]: disabled,\r\n    };\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className={classNames(cls.Button, mods, [className])}\r\n            disabled={disabled}\r\n            {...otherProps}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n});\r\n"],"names":[],"sourceRoot":""}