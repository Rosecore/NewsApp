{"version":3,"file":"widgets-navbar-ui-Navbar-stories.1418f2034d9b964663e9.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;ACxCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://prodproj/./src/app/provider/StoreProvider/config/store.ts","webpack://prodproj/./src/shared/api/api.ts"],"sourcesContent":["import { ReducersMapObject, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { StateSchema } from \"./StateSchema\";\r\nimport { CounterReducers } from \"entities/Counter\";\r\nimport { UserReducer } from \"entities/User\";\r\nimport { createReducerManager } from \"./ReducersManager\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { $ax } from \"shared/api/api\";\r\n\r\n\r\nexport function createReduxStore(\r\n    initialState?: StateSchema,\r\n    asyncReducers?: ReducersMapObject<StateSchema>,\r\n) {\r\n    const rootReducers: ReducersMapObject<StateSchema> = {\r\n        ...asyncReducers,\r\n        counter: CounterReducers,\r\n        user: UserReducer,\r\n    };\r\n\r\n    const reducerManager = createReducerManager(rootReducers);\r\n\r\n    const store = configureStore<StateSchema>({\r\n        reducer: reducerManager.reduce,\r\n        preloadedState: initialState,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n            thunk:{\r\n                extraArgument:{\r\n                    api:$ax\r\n                }\r\n            }\r\n        })\r\n    });\r\n\r\n    // @ts-ignore\r\n    store.reducerManager = reducerManager;\r\n\r\n    return store;\r\n}\r\nexport type AppDispatch = ReturnType<typeof createReduxStore>['dispatch']\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import axios from \"axios\";\r\nimport { USER_LOCALSTORAGE_KEY } from \"shared/const/localstorage\";\r\n\r\nexport const $ax = axios.create({\r\n    baseURL:\"http://localhost:8000\",\r\n    headers:{\r\n        authorization:localStorage.getItem(USER_LOCALSTORAGE_KEY)\r\n    }\r\n})"],"names":[],"sourceRoot":""}