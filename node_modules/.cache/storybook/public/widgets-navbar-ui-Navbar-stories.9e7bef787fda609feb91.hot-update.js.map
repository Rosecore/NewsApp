{"version":3,"file":"widgets-navbar-ui-Navbar-stories.9e7bef787fda609feb91.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://prodproj/./src/features/AuthByUsername/ui/LoginForm/LoginForm.tsx","webpack://prodproj/./src/shared/ui/Text/Text.tsx","webpack://prodproj/./src/shared/ui/Text/Text.module.scss","webpack://prodproj/./src/shared/ui/Text/Text.module.scss?b10e"],"sourcesContent":["import { classNames } from 'shared/lib/classNames/classNames';\r\nimport cls from './LoginForm.module.scss'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Button } from 'shared/ui/Button/Button';\r\nimport { Input } from 'shared/ui/Input/Input';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { UserActions } from 'entities/User';\r\nimport { LoginActions } from '../../model/slice/LoginSlice';\r\nimport { useCallback, memo } from 'react';\r\nimport { SelectLoginState } from '../../model/selectors/SelectLoginState/SelectLoginState';\r\nimport { LoginByUsername } from '../../model/services/LoginByUsername/LoginByUsername';\r\nimport { useAppDispatch } from '../../model/services/UseAppDispatch/UseAppDispatch';\r\nimport { TextTheme } from 'shared/ui/Text/Text';\r\n//import { useAppDispatch } from '../../../../app/provider/StoreProvider';\r\n\r\n\r\ninterface LoginFormProps {\r\n    className?: string,\r\n}\r\nexport const LoginForm = memo(({className}:LoginFormProps) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n    const {username, password, error, isLoading} = useSelector(SelectLoginState)\r\n\r\n    const onChangeUsername = useCallback((value:string) =>{\r\n        dispatch(LoginActions.setUsername(value))\r\n    },[dispatch])\r\n\r\n    const onChangePassword =  useCallback((value:string) =>{\r\n        dispatch(LoginActions.setPassword(value))\r\n    },[dispatch])\r\n\r\n    const onLoginClick =  useCallback(() =>{\r\n        dispatch(LoginByUsername({username,password}))\r\n    },[dispatch,password,username])\r\n\r\n \r\n    return (\r\n        <div className={classNames(cls.LoginForm,{},[className])}>\r\n            {error && <Text theme={TextTheme.ERROR} error={error}></Text>}\r\n            <Input type='text' onChange = {onChangeUsername} placeholder='EnterUsername' value={username}></Input>\r\n            <Input type='text' onChange = {onChangePassword} placeholder='EnterPassword' value={password}></Input>\r\n            <Button className={cls.lognBtn} onClick={onLoginClick} disabled={isLoading}>\r\n                {t(\"Enter\")}\r\n            </Button>\r\n        </div>\r\n    );\r\n});\r\n","import { classNames } from 'shared/lib/classNames/classNames';\nimport cls from './Text.module.scss';\n\nexport enum TextTheme {\n    PRIMARY = 'primary',\n    ERROR = 'error',\n}\n\ninterface TextProps {\n    className?: string;\n    title?: string;\n    text?: string;\n    theme?: TextTheme;\n}\n\nexport const Text = (props: TextProps) => {\n    const {\n        className,\n        text,\n        title,\n        theme = TextTheme.PRIMARY,\n    } = props;\n\n    return (\n        <div className={classNames(cls.Text, { [cls[theme]]: true }, [className])}>\n            {title && <p className={cls.title}>{title}</p>}\n            {text && <p className={cls.text}>{text}</p>}\n        </div>\n    );\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.src-shared-ui-Text-Text-module__title {\n  font: var(--font-l);\n  color: var(--primary-color);\n}\n\n.src-shared-ui-Text-Text-module__text {\n  font: var(--font-m);\n  color: var(--secondary-color);\n}\n\n.src-shared-ui-Text-Text-module__error .src-shared-ui-Text-Text-module__title {\n  color: var(--red-light);\n}\n.src-shared-ui-Text-Text-module__error .src-shared-ui-Text-Text-module__text {\n  color: var(--red-dark);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/shared/ui/Text/Text.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACI,mBAAA;EACA,2BAAA;AACJ;;AAEA;EACI,mBAAA;EACA,6BAAA;AACJ;;AAGI;EACI,uBAAA;AAAR;AAGI;EACI,sBAAA;AADR\",\"sourcesContent\":[\".title {\\n    font: var(--font-l);\\n    color: var(--primary-color);\\n}\\n\\n.text {\\n    font: var(--font-m);\\n    color: var(--secondary-color);\\n}\\n\\n.error {\\n    .title {\\n        color: var(--red-light);\\n    }\\n\\n    .text {\\n        color: var(--red-dark);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": `src-shared-ui-Text-Text-module__title`,\n\t\"text\": `src-shared-ui-Text-Text-module__text`,\n\t\"error\": `src-shared-ui-Text-Text-module__error`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./Text.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}