{"version":3,"file":"src_pages_profilePage_ui_ProfilePage_tsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AACA;AAIA;AAEA;AAAA;AAAA;AAGA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AAEA;AACA;AAIA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAGA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAAA;AACA;AAGA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACJA;AAGA;;;;;;;;;;;;;;;ACCA;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AApEA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAlCA;AAoCA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;;;;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://prodproj/./src/app/provider/StoreProvider/config/ReducersManager.ts","webpack://prodproj/./src/app/provider/StoreProvider/config/store.ts","webpack://prodproj/./src/app/provider/StoreProvider/index.tsx","webpack://prodproj/./src/app/provider/StoreProvider/ui/StoreProvider.tsx","webpack://prodproj/./src/entities/Profile/index.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileData/getProfileData.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileError/getProfileError.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileForm/getProfileForm.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileIsLoading/getProfileIsLoading.ts","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileReadonly/getProfileReadonly.tsx","webpack://prodproj/./src/entities/Profile/model/selectors/getProfileValidationErrors/getProfileValidationErrors.ts","webpack://prodproj/./src/entities/Profile/model/services/fetchProfileData/fetchProfileData.ts","webpack://prodproj/./src/entities/Profile/model/services/setProfileData/setProfileData.ts","webpack://prodproj/./src/entities/Profile/model/services/validateProfileData/validateProfileData.tsx","webpack://prodproj/./src/entities/Profile/model/slice/ProfileSlice.tsx","webpack://prodproj/./src/entities/Profile/model/types/profile.ts","webpack://prodproj/./src/entities/User/index.ts","webpack://prodproj/./src/entities/User/modal/selectors/getUserAuthData/getUserAuthData.ts","webpack://prodproj/./src/entities/User/modal/slice/UserSlice.tsx","webpack://prodproj/./src/pages/profilePage/ui/ProfilePage.tsx","webpack://prodproj/./src/pages/profilePage/ui/ProfilePageHeader/ProfilePageHeader.tsx","webpack://prodproj/./src/shared/api/api.ts","webpack://prodproj/./src/shared/const/localstorage.ts","webpack://prodproj/./src/shared/lib/comonents/DynamicModuleLoader/DynamicModuleLoader.tsx","webpack://prodproj/./src/pages/profilePage/ui/ProfilePageHeader/ProfilePageHeader.module.scss","webpack://prodproj/./src/pages/profilePage/ui/ProfilePageHeader/ProfilePageHeader.module.scss?16ad"],"sourcesContent":["import { ReducerWithoutAction } from \"react\"\r\nimport { AnyAction, Reducer, ReducersMapObject, combineReducers } from \"redux\"\r\nimport { StateSchema } from \"..\"\r\nimport { ReducerManager, StateSchemaKey } from \"./StateSchema\"\r\n\r\nexport function createReducerManager(initialReducers:ReducersMapObject<StateSchema>):ReducerManager {\r\n    \r\n    const reducers = { ...initialReducers }\r\n  \r\n    \r\n    let combinedReducer = combineReducers(reducers)\r\n  \r\n    \r\n    let keysToRemove:StateSchemaKey[] = []\r\n  \r\n    return {\r\n        getReducerMap: () => reducers,\r\n  \r\n        reduce: (state:StateSchema, action:AnyAction) => {\r\n            if (keysToRemove.length > 0) {\r\n                state = { ...state }\r\n                for (let key of keysToRemove) {\r\n                    delete state[key]\r\n                }\r\n                keysToRemove = []\r\n            }\r\n  \r\n            return combinedReducer(state, action)\r\n        },\r\n  \r\n        add: (key:StateSchemaKey, reducer:Reducer) => {\r\n            if (!key || reducers[key]) {\r\n                return\r\n            }\r\n  \r\n            reducers[key] = reducer\r\n  \r\n            combinedReducer = combineReducers(reducers)\r\n        },\r\n  \r\n        remove: (key:StateSchemaKey) => {\r\n            if (!key || !reducers[key]) {\r\n                return\r\n            }\r\n  \r\n            delete reducers[key]\r\n  \r\n            keysToRemove.push(key)\r\n  \r\n            combinedReducer = combineReducers(reducers)\r\n        }\r\n    }\r\n}\r\n","import { CombinedState, Reducer, ReducersMapObject, configureStore } from \"@reduxjs/toolkit\";\r\nimport { UserReducer } from \"entities/User\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavigateOptions, To } from \"react-router-dom\";\r\nimport { $ax } from \"shared/api/api\";\r\nimport { createReducerManager } from \"./ReducersManager\";\r\nimport { ExtraThunk, StateSchema } from \"./StateSchema\";\r\n\r\n\r\nexport function createReduxStore(\r\n    initialState?: StateSchema,\r\n    asyncReducers?: ReducersMapObject<StateSchema>,\r\n    navigate?: (to: To, options?: NavigateOptions) => void,\r\n) {\r\n    const rootReducers: ReducersMapObject<StateSchema> = {\r\n        ...asyncReducers,\r\n        user: UserReducer,\r\n    };\r\n\r\n    const extraArg: ExtraThunk = {\r\n        api: $ax,\r\n        navigate,\r\n    };\r\n\r\n    const reducerManager = createReducerManager(rootReducers);\r\n\r\n    const store = configureStore({\r\n        reducer: reducerManager.reduce as Reducer<CombinedState<StateSchema>>,\r\n        preloadedState: initialState,\r\n        middleware: getDefaultMiddleware => getDefaultMiddleware({\r\n            thunk: {\r\n                extraArgument: extraArg\r\n            }\r\n        })\r\n    });\r\n\r\n    // @ts-ignore\r\n    store.reducerManager = reducerManager;\r\n\r\n    return store;\r\n}\r\nexport type AppDispatch = ReturnType<typeof createReduxStore>['dispatch']\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { createReduxStore } from \"./config/store\";\r\nimport {StoreProvider} from \"./ui/StoreProvider\";\r\nimport { StateSchema } from \"./config/StateSchema\";\r\nimport  {AppDispatch, useAppDispatch}  from \"./config/store\";\r\nimport { ReduxStoreWithManager } from \"./config/StateSchema\";\r\nimport { ExtraThunk } from \"./config/StateSchema\";\r\nexport {StoreProvider, createReduxStore, StateSchema, AppDispatch, useAppDispatch, ReduxStoreWithManager,ExtraThunk}","import React, { ReactNode } from 'react';\r\nimport { Provider, useDispatch } from 'react-redux';\r\nimport { createReduxStore } from '../config/store';\r\nimport { StateSchema } from '../config/StateSchema';\r\nimport { ReducersMapObject } from 'redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface StoreProviderProps {\r\n    children?: ReactNode;\r\n    initialState?: DeepPartial<StateSchema>;\r\n    asyncReducers?: DeepPartial<ReducersMapObject<StateSchema>>\r\n}\r\n\r\nexport const StoreProvider = (props: StoreProviderProps) => {\r\n    const {\r\n        children,\r\n        initialState,\r\n        asyncReducers,\r\n    } = props;\r\n\r\n    const navigate = useNavigate();\r\n    const store = createReduxStore(\r\n        initialState as StateSchema,\r\n        asyncReducers as ReducersMapObject<StateSchema>,\r\n        navigate\r\n    );\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};\r\n","import { ProfileActions, ProfileReducer } from \"./model/slice/ProfileSlice\";\r\nimport { ProfileType, ProfileSchema } from \"./model/types/profile\";\r\nimport { FetchProfileData } from \"./model/services/fetchProfileData/fetchProfileData\";\r\nimport { getProfileData } from \"./model/selectors/getProfileData/getProfileData\";\r\nimport { getProfileError } from \"./model/selectors/getProfileError/getProfileError\";\r\nimport { getProfileIsLoading } from \"./model/selectors/getProfileIsLoading/getProfileIsLoading\";\r\nimport { getProfileReadonly } from \"./model/selectors/getProfileReadonly/getProfileReadonly\";\r\nimport { getProfileForm } from \"./model/selectors/getProfileForm/getProfileForm\";\r\nimport { setProfileData } from \"./model/services/setProfileData/setProfileData\";\r\nimport { getProfileValidationErrors } from \"./model/selectors/getProfileValidationErrors/getProfileValidationErrors\";\r\nimport ProfileCard from \"./ui/ProfileCard/ProfileCard\";\r\n\r\nexport { ProfileType, ProfileSchema, ProfileReducer, ProfileActions, FetchProfileData, getProfileData,\r\n    getProfileError, getProfileIsLoading, getProfileReadonly, getProfileForm, getProfileValidationErrors, ProfileCard, setProfileData}","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileData = (state: StateSchema) => state?.profile?.data","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileError = (state: StateSchema) => state?.profile?.error","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileForm = (state: StateSchema) => state?.profile?.form","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileIsLoading = (state: StateSchema) => state?.profile?.isLoading","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileReadonly = (state: StateSchema) => state?.profile?.readonly || false","import { StateSchema } from 'app/provider/StoreProvider';\r\n\r\nexport const getProfileValidationErrors = (state: StateSchema) => state?.profile?.validateError || []","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { ExtraThunk } from 'app/provider/StoreProvider'\r\nimport { ProfileType } from '../../types/profile'\r\n\r\nexport const FetchProfileData = createAsyncThunk<ProfileType,void,{ rejectValue: string , extra:ExtraThunk}>(\r\n    'profile/FetchProfileData',\r\n    async (_,thunkAPI) => {\r\n        try {\r\n            const response = await thunkAPI.extra.api.get<ProfileType>('/profile')\r\n            if (!response.data){\r\n                throw new Error();\r\n            }\r\n            return response.data\r\n        } catch (err) {\r\n            return thunkAPI.rejectWithValue(\"Неправильный юзернейм или пароль\")\r\n        }\r\n    }\r\n)\r\n\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { ProfileType, ProfileValidationErrors } from '../../types/profile'\r\nimport { getProfileForm } from '../../selectors/getProfileForm/getProfileForm'\r\nimport { ThunkConfig } from 'app/provider/StoreProvider/config/StateSchema'\r\nimport { validateProfileData } from '../validateProfileData/validateProfileData'\r\n\r\nexport const setProfileData = createAsyncThunk<ProfileType,void,ThunkConfig<ProfileValidationErrors[]>>(\r\n    'profile/setProfileData',\r\n    async (_,thunkAPI, ) => {\r\n        const {extra, rejectWithValue,dispatch, getState} = thunkAPI\r\n        const formData = getProfileForm(getState())\r\n        const errors = validateProfileData(formData)\r\n\r\n        if (errors.length){\r\n            return rejectWithValue(errors)\r\n        }\r\n        try {\r\n            const response = await extra.api.put<ProfileType>('/profile', formData)\r\n            if (!response){\r\n                throw new Error();\r\n            }\r\n            return response.data\r\n        } catch (err) {\r\n            return rejectWithValue([ProfileValidationErrors.SERV_ERR])\r\n        }\r\n    }\r\n)\r\n\r\n","import { ProfileType, ProfileValidationErrors } from \"../../types/profile\";\r\n\r\nexport const validateProfileData = (profile?: ProfileType) =>{\r\n    if (!profile){\r\n        return [ProfileValidationErrors.NO_DATA]\r\n    }\r\n    const {age, first, lastname, country} = profile\r\n    const error: ProfileValidationErrors[] = []\r\n    if (!age || !Number.isInteger(age)){\r\n       \r\n        error.push(ProfileValidationErrors.INCORRECT_AGE)\r\n    }\r\n    if (!lastname || !first){\r\n        error.push(ProfileValidationErrors.INCORRECT_FIRST_NAME_OR_LAST_NAME)\r\n    }\r\n    if (!country){\r\n        error.push(ProfileValidationErrors.INCORRECT_COUNTRY)\r\n    }\r\n    return error\r\n}\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { ProfileSchema, ProfileType } from '../types/profile'\r\nimport { FetchProfileData } from '../services/fetchProfileData/fetchProfileData'\r\nimport { User } from 'entities/User'\r\nimport { setProfileData } from '../services/setProfileData/setProfileData'\r\n\r\nconst initialState: ProfileSchema = {\r\n    readonly:true,\r\n    isLoading:false,\r\n    error:undefined,\r\n    data:undefined\r\n}\r\nexport const ProfileSlice = createSlice({\r\n    name:'Profile',\r\n    initialState,\r\n    reducers:{\r\n        setReadonly: (state,action:PayloadAction<boolean>)=>{\r\n            state.readonly=action.payload\r\n        },\r\n        setNotReadonly: (state)=>{\r\n            state.readonly=true\r\n            state.form = state.data\r\n            state.validateError = undefined\r\n        },\r\n        updateProfile: (state,action:PayloadAction<ProfileType>)=>{\r\n            state.form = {\r\n                ...state.form, \r\n                ...action.payload\r\n            }\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(FetchProfileData.pending, (state) => {\r\n                state.error = undefined;\r\n                state.isLoading = true\r\n            })\r\n            .addCase(FetchProfileData.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.data = action.payload\r\n                state.form = action.payload\r\n            })\r\n            .addCase(FetchProfileData.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = action.payload\r\n            })\r\n            .addCase(setProfileData.pending, (state) => {\r\n                state.validateError = undefined;\r\n                state.isLoading = true\r\n            })\r\n            .addCase(setProfileData.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.data = action.payload\r\n                state.form = action.payload\r\n                state.validateError = undefined\r\n            })\r\n            .addCase(setProfileData.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.validateError = action.payload\r\n            })\r\n    },\r\n})\r\nexport const {actions:ProfileActions} = ProfileSlice\r\nexport const {reducer:ProfileReducer} = ProfileSlice","import { Country } from \"entities/Country/model/types/Country\";\r\nimport { Currency } from \"entities/Currency/model/types/Currency\";\r\n\r\n\r\nexport enum ProfileValidationErrors {\r\n    INCORRECT_FIRST_NAME_OR_LAST_NAME = \"INCORRECT_FIRST_NAME_OR_LAST_NAME\",\r\n    INCORRECT_AGE = \"INCORRECT_AGE\",\r\n    INCORRECT_COUNTRY = \"INCORRECT_COUNTRY\",\r\n    NO_DATA = \"NO_DATA\",\r\n    SERV_ERR = \"SERV_ERR\"\r\n}\r\n\r\nexport interface ProfileType{\r\n    first?: string,\r\n    lastname?: string,\r\n    age?: number,\r\n    currency?: Currency,\r\n    country?: Country,\r\n    city?: string,\r\n    username?: string,\r\n    avatar?: string\r\n}\r\n\r\nexport interface ProfileSchema{\r\n    data?:ProfileType,\r\n    form?:ProfileType,\r\n    isLoading: boolean,\r\n    error?:string,\r\n    readonly:boolean,\r\n    validateError?:ProfileValidationErrors[]\r\n}","import { UserActions, UserReducer } from \"./modal/slice/UserSlice\";\r\nimport type { User } from \"./modal/types/User\";\r\nimport type { UserSchema } from \"./modal/types/User\";\r\nimport { getUserAuthData } from \"./modal/selectors/getUserAuthData/getUserAuthData\";\r\nexport {UserActions, UserReducer, User,UserSchema,getUserAuthData }","import { StateSchema } from \"app/provider/StoreProvider\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const getUserAuthData = (state:StateSchema) => state?.user.authData","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\r\nimport { User, UserSchema } from '../types/User'\r\nimport { USER_LOCALSTORAGE_KEY } from 'shared/const/localstorage'\r\nimport { userInfo } from 'os'\r\n\r\nconst initialState: UserSchema = {\r\n   \r\n}\r\nexport const UserSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n        setAuthData: (state,action:PayloadAction<User>)=>{\r\n            state.authData=action.payload\r\n        },\r\n        initAuthData:(state)=>{\r\n            const user = localStorage.getItem(USER_LOCALSTORAGE_KEY)\r\n            if (user){\r\n                state.authData = JSON.parse(user)\r\n            }\r\n        },\r\n        logout:(state)=>{\r\n            state.authData = undefined\r\n            localStorage.removeItem(USER_LOCALSTORAGE_KEY)\r\n        }\r\n\r\n    }\r\n})\r\nexport const {actions:UserActions} = UserSlice\r\nexport const {reducer:UserReducer} = UserSlice","import { useAppDispatch } from \"app/provider/StoreProvider\";\r\nimport { FetchProfileData, ProfileActions, ProfileCard, ProfileReducer, getProfileData, getProfileError, getProfileForm, getProfileIsLoading, getProfileReadonly, getProfileValidationErrors } from \"entities/Profile\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {DynamicModuleLoader,  ReducersList } from \"shared/lib/comonents/DynamicModuleLoader/DynamicModuleLoader\";\r\nimport ProfilePageHeader from \"./ProfilePageHeader/ProfilePageHeader\";\r\nimport { Currency } from \"entities/Currency\";\r\nimport { Country } from \"entities/Country\";\r\nimport { TextTheme } from \"shared/ui/Text/Text\";\r\nimport { Text } from \"shared/ui/Text/Text\";\r\n\r\nconst reducers: ReducersList = {\r\n    profile:ProfileReducer\r\n}\r\nconst ProfilePage = () =>{\r\n    const {t} = useTranslation()\r\n    const data = useSelector(getProfileData)\r\n    const form = useSelector(getProfileForm)\r\n    const error = useSelector(getProfileError)\r\n    const isLoading = useSelector(getProfileIsLoading)\r\n    const validationErrors = useSelector(getProfileValidationErrors)\r\n    const dispatch = useAppDispatch()\r\n    const readonly = useSelector(getProfileReadonly)\r\n\r\n    const onChangeFirstName = useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({first:value}))\r\n    },[dispatch])\r\n\r\n    const onChangeLastName = useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({lastname:value}))\r\n    },[dispatch])\r\n\r\n    const onChangeCity = useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({city:value}))\r\n    },[dispatch])\r\n\r\n    const onChangeUsername = useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({username:value}))\r\n    },[dispatch])\r\n\r\n    const onChangeAvatar= useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({avatar:value}))\r\n    },[dispatch])\r\n\r\n    const onChangeCurrency = useCallback((currency:Currency)=>{\r\n        dispatch(ProfileActions.updateProfile({currency}))\r\n    },[dispatch])\r\n\r\n    const onChangeCountry = useCallback((country:Country)=>{\r\n        dispatch(ProfileActions.updateProfile({country}))\r\n    },[dispatch])\r\n\r\n    const onChangeAge = useCallback((value:string)=>{\r\n        dispatch(ProfileActions.updateProfile({age:Number(value)|| 0}))\r\n    },[dispatch])\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(FetchProfileData())\r\n    },[dispatch])\r\n    return (\r\n        <DynamicModuleLoader reducers={reducers}>\r\n            <div>\r\n                <ProfilePageHeader/>\r\n                {validationErrors?.length && validationErrors.map((err)=>(\r\n                    <Text key = {err} theme= {TextTheme.ERROR} text = {err}/>\r\n                ))}\r\n                <ProfileCard \r\n                    data={form} \r\n                    isLoading={isLoading} \r\n                    error={error} \r\n                    readonly={readonly} \r\n                    onChangeFirstName = {onChangeFirstName} \r\n                    onChangeLastName={onChangeLastName}\r\n                    onChangeCurrency={onChangeCurrency}\r\n                    onChangeCountry={onChangeCountry}\r\n                    onChangeAge={onChangeAge}\r\n                    onChangeCity={onChangeCity}\r\n                    onChangeUsername={onChangeUsername}\r\n                    onChangeAvatar={onChangeAvatar}/>                               \r\n            </div>\r\n        </DynamicModuleLoader>)\r\n}\r\n\r\nexport default ProfilePage","import { classNames } from 'shared/lib/classNames/classNames';\r\nimport cls from './ProfilePageHeader.module.scss'\r\nimport { Text, TextTheme } from 'shared/ui/Text/Text';\r\nimport { Button } from 'shared/ui/Button/Button';\r\nimport { Input } from 'shared/ui/Input/Input';\r\nimport { ProfileType } from 'entities/Profile/model/types/profile';\r\nimport { Loader } from 'shared/ui/Loader/Loader';\r\nimport { useSelector } from 'react-redux';\r\nimport { ProfileActions, getProfileReadonly, setProfileData } from 'entities/Profile';\r\nimport { useCallback } from 'react';\r\nimport { useAppDispatch } from 'app/provider/StoreProvider';\r\n\r\ninterface ProfilePageHeaderProps{\r\n    className?: string,\r\n\r\n}\r\n\r\nconst ProfilePageHeader = ({className}:ProfilePageHeaderProps) => {\r\n    const readonly = useSelector(getProfileReadonly)\r\n    const dispatch = useAppDispatch();\r\n    const onEdit = useCallback(()=>{\r\n        dispatch(ProfileActions.setReadonly(false))\r\n    },[dispatch])\r\n\r\n    const onCancelEdit = useCallback(()=>{\r\n        dispatch(ProfileActions.setNotReadonly())\r\n    },[dispatch])\r\n\r\n    const onSave = useCallback(async()=>{\r\n        const result = await dispatch(setProfileData())\r\n        if (result.meta.requestStatus ==='fulfilled'){\r\n           \r\n        }\r\n    },[dispatch])\r\n\r\n\r\n    return (\r\n        <div className={classNames(cls.ProfileCard,{},[className])}>\r\n            <div className={cls.header}>\r\n                <Text title='Ваш милый профиль'/>\r\n                { readonly?\r\n                    <Button className={cls.editBtn} onClick={onEdit}>Редактировать</Button>\r\n                    :\r\n                    <>\r\n                        <Button className={cls.editBtn} onClick={onSave}>Сохранить</Button>\r\n                        <Button className={cls.editBtn} onClick={onCancelEdit}>Отменить</Button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePageHeader;","import axios from \"axios\";\r\nimport { USER_LOCALSTORAGE_KEY } from \"shared/const/localstorage\";\r\n\r\nexport const $ax = axios.create({\r\n    baseURL:\"http://localhost:8000\",\r\n    headers:{\r\n        Authorization:localStorage.getItem(USER_LOCALSTORAGE_KEY)\r\n    }\r\n})","export const USER_LOCALSTORAGE_KEY = 'user'","import { FC, ReactNode, useEffect } from 'react';\r\nimport { useDispatch, useStore } from 'react-redux';\r\nimport { ReduxStoreWithManager, StateSchemaKey } from 'app/provider/StoreProvider/config/StateSchema';\r\nimport { Reducer } from '@reduxjs/toolkit';\r\n\r\nexport type ReducersList = {\r\n    [name in StateSchemaKey]?: Reducer;\r\n}\r\n\r\ninterface DynamicModuleLoaderProps {\r\n    reducers: ReducersList;\r\n    removeAfterUnmount?: boolean;\r\n    children:ReactNode;\r\n}\r\n\r\nexport const DynamicModuleLoader: FC<DynamicModuleLoaderProps> = (props) => {\r\n    const {\r\n        children,\r\n        reducers,\r\n        removeAfterUnmount,\r\n    } = props;\r\n\r\n    const store = useStore() as ReduxStoreWithManager;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        Object.entries(reducers).forEach(([name, reducer]) => {\r\n            store.reducerManager.add(name as StateSchemaKey, reducer);\r\n            dispatch({ type: `@INIT ${name} reducer` });\r\n        });\r\n\r\n        return () => {\r\n            if (removeAfterUnmount) {\r\n                Object.entries(reducers).forEach(([name, reducer]) => {\r\n                    store.reducerManager.remove(name as StateSchemaKey);\r\n                    dispatch({ type: `@DESTROY ${name} reducer` });\r\n                });\r\n            }\r\n        };\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        // eslint-disable-next-line react/jsx-no-useless-fragment\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.src-pages-profilePage-ui-ProfilePageHeader-ProfilePageHeader-module__header {\n  display: flex;\n}\n\n.src-pages-profilePage-ui-ProfilePageHeader-ProfilePageHeader-module__editBtn {\n  margin: auto;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/pages/profilePage/ui/ProfilePageHeader/ProfilePageHeader.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACI,aAAA;AACJ;;AACA;EACI,YAAA;AAEJ\",\"sourcesContent\":[\".header{\\r\\n    display: flex;\\r\\n}\\r\\n.editBtn{\\r\\n    margin: auto;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"header\": `src-pages-profilePage-ui-ProfilePageHeader-ProfilePageHeader-module__header`,\n\t\"editBtn\": `src-pages-profilePage-ui-ProfilePageHeader-ProfilePageHeader-module__editBtn`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./ProfilePageHeader.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./ProfilePageHeader.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[14].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./ProfilePageHeader.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}